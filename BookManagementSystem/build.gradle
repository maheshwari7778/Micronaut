plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.4"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
}

dependencies {
    compileOnly ("org.projectlombok:lombok:1.18.2")
    testCompileOnly ("org.projectlombok:lombok:1.18.2")
    annotationProcessor ("org.projectlombok:lombok:1.18.2")
    testAnnotationProcessor ("org.projectlombok:lombok:1.18.2")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:3.0.3")
    implementation("io.swagger.core.v3:swagger-annotations")

    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("mysql:mysql-connector-java:8.0.23")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa:3.0.1")
    implementation('io.micronaut.beanvalidation:micronaut-hibernate-validator:3.0.0')
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.data:micronaut-data-processor:1.0.1")

}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}
application {
    mainClass.set("example.micronaut.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}



